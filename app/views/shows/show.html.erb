<%=stylesheet_link_tag "TableTools.css", :media => "all" %>
<%= render 'emerg_modal' %>
<style>

.highlighted { 
  background-color: #ECFFB3;
};

.emergmsg {
    background-color: #c0c0c0;
    position:fixed;
    top:0;
    width:90%;
    z-index:100;
}

</style>

<p id="notice"><%= notice %></p>
<h3><%= @show.title %> @ <%= @show.venue %></h3>
<P>
  <b>Door time:</b>
  <%= @show.door_time.strftime(SHORT_TIME_FMT) %>
  <b>Show time:</b>
  <%= @show.show_time.strftime(SHORT_TIME_FMT) %>
</p>

<div class="alert alert-error emergmsg" id="emergdiv" style="display: none;">
<div id="emergmsg"></div>
</div>
<script>
$(window).scroll(function(e){ 
  $el = $('.emergmsg'); 
  if ($(this).scrollTop() > 50 && $el.css('position') != 'fixed'){ 
    $('.emergmsg').css({'position': 'fixed', 'top': '60px', 'width': '90%'}); 
  } 
});
</script>

<P class='noprint'>
<button class="btn btn-success btn-small" id="refreshBtn">
<span class="icon-refresh icon-white"></span> Refresh </button>
<button class="btn btn-danger btn-small" id="emergBtn">
<span class="icon-fire icon-white"></span> Emergency Msg </button>
</p>
<h3>Show Schedule</h3>


<table cellpadding="0" cellspacing="0"  class="table table-bordered dataTable" id="showlist">
<thead>
     <TR>
     <TH width=30>Seq</TH>
     <TH width=70>Time</TH>
     <TH>Act</TH>
     <TH>Sound</TH>
     <TH>Light + Stage</TH>
     <TH>Notes</TH>
     <TH WIDTH=80>Actions</TH>
     </TR>
</thead>
<tbody>
<!-- data -->
</tbody>
</TABLE>

<script>

$.extend( $.fn.dataTableExt.oStdClasses, {
    "sSortAsc": "header headerSortDown",
    "sSortDesc": "header headerSortUp",
    "sSortable": "header"
} );

$.extend( $.fn.dataTableExt.oStdClasses, {
    "sWrapper": "dataTables_wrapper form-inline"
} );


// extends for TableTools 
// Set the classes that TableTools uses to something suitable for Bootstrap

$.extend( true, $.fn.DataTable.TableTools.classes, {
    "container": "btn-group",
      "buttons": {
          "normal": "btn",
          "disabled": "btn disabled"
      },
      "collection": {
        "container": "DTTT_dropdown dropdown-menu",
          "buttons": {
          "normal": "",
            "disabled": "disabled"
            },
          }
  } );
                            
// Have the collection use a bootstrap compatible dropdown
$.extend( true, $.fn.DataTable.TableTools.DEFAULTS.oTags, {
    "collection": {
      "container": "ul",
        "button": "li",
        "liner": "a"
        }
  } );


/* set up acts datatable */
$(document).ready(function() {
  var intervalId;

  var closePrintView = function(e) {
    if(e.which == 27) {
        printViewClosed(); 
    }
  };

  function printViewClosed() {
    showDT.fnSetColumnVis(6, true);
    $(window).unbind('keyup', closePrintView);
  }

  showDT = $('#showlist').dataTable( {
      "sDom": "T <'row'<'span12'l><'span12'f>r>t<'row'<'span6'i><'span12'p>>",
        "oTableTools": {
          "sSwfPath": "/assets/copy_csv_xls_pdf.swf",
          "aButtons": [
                       "copy",
                       {
                         "sExtends": "pdf",
                         "sPdfOrientation": "landscape",
                         "sPdfMessage": "<%= @show.title %> @ <%= @show.venue %> Doors: <%= @show.door_time.strftime(SHORT_TIME_FMT) %> / Show: <%= @show.show_time.strftime(SHORT_TIME_FMT)%>",
                         "mColumns": [1,2,3,4,5],
                       },
                       {
                         "sExtends": "print",
                         "mColumns": [1,2,3,4,5],
                       }

                       ]
            },
      "sAjaxSource": "/shows/<%=@show.id%>/show_items.json?m=1",
      "sPaginationType": "bootstrap",
      "iDisplayLength": 100,
      "oLanguage": {
        "sLengthMenu": "Show&nbsp;<select size=1 name=actslist_length aria-controls=\"actslist\"><option value='10'>10</option><option value='50'>50</option><option value='100'>100</option></select>&nbsp;acts per page"
      },
        "fnServerData": function ( sSource, aoData, fnCallback ) {
          $.ajax({'datatype':'json',
                'type':'GET',
                'url':sSource,
                'data':aoData,
                'success':function(json) {               
                   fnCallback(json);
                   if (! intervalId) { 
                     intervalId = setInterval(function() { showDT.fnReloadAjax(); }, 2000);
                    }

                   /* highlight row on callback */
                   var aTrs = showDT.fnGetNodes();

                   for ( var i=0 ; i < aTrs.length ; i++ )
                   {
                     if ( aTrs[i].id == json.highlighted )
                     {
                         $(aTrs[i]).addClass('highlighted');
                     }
                   }
                }});
        }
    });
      
  /* set up the lower table */
  var fixHelper = function(e, ui) {
    ui.children().each(function() {
        $(this).width($(this).width());
      });
    return ui;
  };
  
  $("#sort tbody").sortable({
    helper: fixHelper
        }).disableSelection();
  
  $("#showlist tbody").delegate("td", "click", function() {
      if ($(".markitem", this)[0] != undefined) { 
        var clicked_id = $(".markitem", this)[0].id;
        var showdata = {
          'id':'<%=@show.id%>',
          'highlighted_row': clicked_id,
          "authenticity_token" : AUTH_TOKEN
        };
      
        $.ajax({
          type: 'PUT',
              dataType: 'json',
              url: '/shows/<%=@show.id%>.json',
              contentType: 'application/json',
              data: JSON.stringify(showdata),
              success: function() { 
                showDT.fnReloadAjax();
              }
          });
      }

      if ($(".unmarkitem", this)[0] != undefined) { 
        var clicked_id = $(".unmarkitem", this)[0].id;
        var showdata = {
          'id':'<%=@show.id%>',
          'highlighted_row': '0',
          "authenticity_token" : AUTH_TOKEN
        };
      
        $.ajax({
          type: 'PUT',
              dataType: 'json',
              url: '/shows/<%=@show.id%>.json',
              contentType: 'application/json',
              data: JSON.stringify(showdata),
              success: function() { 
                showDT.fnReloadAjax();
              }
          });
      }

    });

  $("#emergModal").modal('hide');
      
  $("#emergBtn").click( function (e) {
      e.preventDefault();
      showDT.fnReloadAjax();
      $('#emergModal').modal('show');
      $(':input:visible:enabled:first').focus();
  });

  $("#refreshBtn").click( function (e) {
          e.preventDefault();
          showDT.fnReloadAjax();
    });

    /* set up a timer to fetch this via json every second */
    emergIntervalId = setInterval(function(data) {
      $.getJSON("/shows/<%=@show.id%>.json", function(data) { 
        if (data['emergency_msg'] == null || data['emergency_msg'] == "") { 
          $("div#emergdiv").hide();
        } else { 
          $("div#emergmsg").text(data['emergency_msg']);
          $("div#emergdiv").show();
        };
      });
   }, 2000);
   }); 
  
</script>
