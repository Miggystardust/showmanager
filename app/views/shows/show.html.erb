<%=stylesheet_link_tag "TableTools.css", :media => "all" %>
<%= render 'emerg_modal' %>

<p id="notice"><%= notice %></p>
<h3><%= @show.title %> @ <%= @show.venue %></h3>
<P>
  <b>Door time:</b>
  <%= @show.door_time.strftime(SHORT_TIME_FMT) %>
  <b>Show time:</b>
  <%= @show.show_time.strftime(SHORT_TIME_FMT) %>
</p>

<div class="alert alert-error" id="emergdiv" style="display: none;">
<div id="emergmsg"></div>
</div>

<P>
<button class="btn btn-success btn-small" id="refreshBtn">
<i class="icon-refresh icon-white"></i> Refresh </button>
<button class="btn btn-danger btn-small" id="emergBtn">
<i class="icon-fire icon-white"></i> Emergency Msg </button>
</p>
<h3>Show Schedule</h3>


<table cellpadding="0" cellspacing="0"  class="table table-bordered dataTable" id="showlist">
<thead>
     <TR>
     <TH width=50>Seq</TH>
     <TH>Time</TH>
     <TH>Act</TH>
     <TH>Sound</TH>
     <TH>Light + Stage</TH>
     <TH>Notes</TH>
     </TR>
</thead>
<tbody>
<!-- data -->
</tbody>
</TABLE>

<script>

$.extend( $.fn.dataTableExt.oStdClasses, {
    "sSortAsc": "header headerSortDown",
    "sSortDesc": "header headerSortUp",
    "sSortable": "header"
} );

$.extend( $.fn.dataTableExt.oStdClasses, {
    "sWrapper": "dataTables_wrapper form-inline"
} );


// extends for TableTools 
// Set the classes that TableTools uses to something suitable for Bootstrap

$.extend( true, $.fn.DataTable.TableTools.classes, {
    "container": "btn-group",
      "buttons": {
          "normal": "btn",
          "disabled": "btn disabled"
      },
      "collection": {
        "container": "DTTT_dropdown dropdown-menu",
          "buttons": {
          "normal": "",
            "disabled": "disabled"
            },
          }
  } );
                            
// Have the collection use a bootstrap compatible dropdown
$.extend( true, $.fn.DataTable.TableTools.DEFAULTS.oTags, {
    "collection": {
      "container": "ul",
        "button": "li",
        "liner": "a"
        }
  } );


/* set up acts datatable */
$(document).ready(function() {
  var intervalId;

  showDT = $('#showlist').dataTable( {
      "sDom": "T <'row'<'span12'l><'span12'f>r>t<'row'<'span6'i><'span12'p>>",
        "oTableTools": {
          "sSwfPath": "/assets/copy_csv_xls_pdf.swf",
          "aButtons": [
                       "copy",
                       "print",
                       {
                         "sExtends": "pdf",
                           "sPdfOrientation": "landscape",
                           "sPdfMessage": "<%= @show.title %> @ <%= @show.venue %> Doors: <%= @show.door_time.strftime(SHORT_TIME_FMT) %> / Show: <%= @show.show_time.strftime(SHORT_TIME_FMT)%>"
                           },
                       ]
            },
      "sAjaxSource": "/shows/<%=@show.id%>/show_items.json",
      "sPagination": "bootstrap",
      "iDisplayLength": 100,
      "oLanguage": {
        "sLengthMenu": "Show&nbsp;<select size=1 name=actslist_length aria-controls=\"actslist\"><option value='10'>10</option><option value='50'>50</option><option value='100'>100</option></select>&nbsp;records per page"
      },
        "fnServerData": function ( sSource, aoData, fnCallback ) {
          $.ajax({'datatype':'json',
                'type':'GET',
                'url':sSource,
                'data':aoData,
                'success':function(json) {               
                fnCallback(json);
                if (! intervalId) { 
                  intervalId = setInterval(function() { showDT.fnReloadAjax(); }, 1500);
                }
                
              }});
        }
    });

  /* wireup some ajax reloads on these tables - when this was enabled we were getting duplicate rows... */

  /* set up the lower table */
  var fixHelper = function(e, ui) {
    ui.children().each(function() {
        $(this).width($(this).width());
      });
    return ui;
  };
  
  $("#sort tbody").sortable({
    helper: fixHelper
        }).disableSelection();
  
  /* this delegated event handler works, but needs to go down one level. */
  $("#actslist tbody").delegate("td", "click", function() {
      if ($(".actadder", this)[0] != undefined) { 
        var clicked_id = $(".actadder", this)[0].id;
        var actdata = {
          'show_id':'<%=@show.id%>',
          'kind': '32',
          'act_id': clicked_id,
          "authenticity_token" : AUTH_TOKEN
        };
      
        $.ajax({
          type: 'POST',
              dataType: 'json',
              url: '/show_items.json',
              contentType: 'application/json',
              data: JSON.stringify(actdata),
              success: function() { 
                showDT.fnReloadAjax();
              }
          });
      }
    });

  $("#showlist tbody").delegate("td", "click", function() {
      if ($(".siremove", this)[0] != undefined) { 
        var clicked_id = $(".siremove", this)[0].id;
        var actdata = {
          "authenticity_token" : AUTH_TOKEN
        };
      
        $.ajax({
          type: 'DELETE',
              dataType: 'json',
              url: '/show_items/' + clicked_id + '.json',
              contentType: 'application/json',
              data: JSON.stringify(actdata),
              success: function() { 
                showDT.fnReloadAjax();
              }
          });
      }
    });

    $("#emergModal").modal('hide');

	  $("#emergBtn").click( function (e) {
      e.preventDefault();
      showDT.fnReloadAjax();
      $('#emergModal').modal('show');
      $(':input:visible:enabled:first').focus();
    });

	  $("#refreshBtn").click( function (e) {
          e.preventDefault();
          showDT.fnReloadAjax();
    });

    /* set up a timer to fetch this via json every second */
    emergIntervalId = setInterval(function(data) {
      $.getJSON("/shows/<%=@show.id%>.json", function(data) { 
        if (data['emergency_msg'] == null || data['emergency_msg'] == "") { 
          $("div#emergdiv").hide();
        } else { 
          $("div#emergmsg").text(data['emergency_msg']);
          $("div#emergdiv").show();
        };
      });
   }, 1000);
   }); 
  
</script>
